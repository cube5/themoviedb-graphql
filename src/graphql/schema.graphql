enum SortBy {
  POPULARITY_ASC
  POPULARITY_DESC
  RELEASE_DATE_ASC
  RELEASE_DATE_DESC
  REVENUE_ASC
  REVENUE_DESC
  PRIMARY_RELEASE_DATE_ASC
  PRIMARY_RELEASE_DATE_DESC
  ORIGINAL_TITLE_ASC
  ORIGINAL_TITLE_DESC
  VOTE_AVERAGE_ASC
  VOTE_AVERAGE_DESC
  VOTE_COUNT_ASC
  VOTE_COUNT_DESC
}

interface PaginatedResponse {
  page: Int
  total_results: Int
  total_pages: Int
  status_message: String
  status_code: Int
}

type PaginatedMoviesResponse implements PaginatedResponse {
  page: Int
  results: [Movie]
  total_results: Int
  total_pages: Int
  status_message: String
  status_code: Int
}

type Movie {
  vote_count: Int
  id: ID!
  video: Boolean
  vote_average: Float
  title: String
  popularity: Float
  poster_path: String
  original_language: String
  original_title: String
  genre_ids: [Int]
  backdrop_path: String
  adult: Boolean
  overview: String
  release_date: String
}

type Query {
  discover(
    language: String
    sort_by: SortBy
    include_adult: Boolean
    include_video: Boolean
    page: Int
  ): PaginatedMoviesResponse!
  search(
    query: String
    year: Int
    include_adult: Boolean
    page: Int
  ): PaginatedMoviesResponse!
}
