enum SortBy {
  POPULARITY_ASC
  POPULARITY_DESC
  RELEASE_DATE_ASC
  RELEASE_DATE_DESC
  REVENUE_ASC
  REVENUE_DESC
  PRIMARY_RELEASE_DATE_ASC
  PRIMARY_RELEASE_DATE_DESC
  ORIGINAL_TITLE_ASC
  ORIGINAL_TITLE_DESC
  VOTE_AVERAGE_ASC
  VOTE_AVERAGE_DESC
  VOTE_COUNT_ASC
  VOTE_COUNT_DESC
}

enum MovieStatus {
  RUMORED
  PLANNED
  IN_PRODUCTION
  POST_PRODUCTION
  RELEASED
  CANCELED
}

type ProductionCompany {
  id: ID!
  logo_path: String
  name: String
  origin_country: String
}

type ProductionCountry {
  iso_3166_1: String
  name: String
}

type SpokenLanguage {
  iso_639_1: String
  name: String
}

type Genre {
  id: ID
  name: String
}

type Movie {
  id: ID
  adult: Boolean
  backdrop_path: String
  genre_ids: [Int]
  original_language: String
  original_title: String
  overview: String
  popularity: Float
  poster_path: String
  vote_count: Int
  release_date: String
  title: String
  video: Boolean
  vote_average: Float
}

type MovieDetail {
  id: ID
  adult: Boolean
  backdrop_path: String
  belongs_to_collection: String
  budget: Int
  genres: [Genre]
  homepage: String
  imdb_id: String # validate
  original_language: String
  original_title: String
  overview: String
  popularity: Float
  poster_path: String
  production_companies: [ProductionCompany]
  production_countries: [ProductionCountry]
  release_date: String #validate format yyyy-mm-dd
  revenue: Int
  runtime: Int
  spoken_languages: [SpokenLanguage]
  status: MovieStatus
  tagline: String
  title: String
  video: Boolean
  vote_average: Float
  vote_count: Int
}

type PaginatedMoviesResponse {
  page: Int
  results: [Movie]
  total_results: Int
  total_pages: Int
}

type Query {
  movie(id: ID!): MovieDetail
  discover(
    language: String
    sort_by: SortBy
    include_adult: Boolean
    include_video: Boolean
    page: Int
  ): PaginatedMoviesResponse!
  search(
    query: String!
    year: Int
    include_adult: Boolean
    page: Int
  ): PaginatedMoviesResponse!
}
